package com.oneshop.entity;

import jakarta.persistence.*;
import lombok.*;
import java.math.BigDecimal;

@Entity
@Table(
    name = "cart_items",
    uniqueConstraints = @UniqueConstraint(columnNames = {"cart_id", "variant_id"})
)
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class CartItem {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long cartItemId;

    // üîó M·ªói item thu·ªôc v·ªÅ 1 gi·ªè h√†ng
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "cart_id", nullable = false)
    private Cart cart;

    // üîó M·ªói item li√™n k·∫øt v·ªõi 1 bi·∫øn th·ªÉ s·∫£n ph·∫©m
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "variant_id", nullable = false)
    private ProductVariant productVariant;

    @Column(nullable = false)
    private int quantity;

    // Gi√° t·∫°i th·ªùi ƒëi·ªÉm th√™m v√†o gi·ªè
    @Column(precision = 12, scale = 2)
    private BigDecimal priceAtAdd;

    // ‚úÖ T√≠nh t·ªïng ti·ªÅn t·ª´ng item (kh√¥ng l∆∞u DB)
    @Transient
    public BigDecimal getSubtotal() {
        BigDecimal price = (priceAtAdd != null)
                ? priceAtAdd
                : productVariant.getPrice();
        return price.multiply(BigDecimal.valueOf(quantity));
    }
}
